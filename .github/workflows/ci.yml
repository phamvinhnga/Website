name: Deloy to server

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]

    steps:
        - uses: actions/checkout@v3

        # - name: Log in to Docker Hub
        #   uses: docker/login-action@v2
        #   with:
        #     username: ${{ secrets.DOCKER_USERNAME }}
        #     password: ${{ secrets.DOCKER_PASSWORD }}

        # - name: Build and push Docker image
        #   id: docker_build
        #   uses: docker/build-push-action@v2
        #   with:
        #     context: .
        #     push: true
        #     tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
        #     file: ./src/Website.Api/Dockerfile

        - name: Connect to VPS and run docker compose
          uses: appleboy/ssh-action@v0.1.10
          with:
            host: ${{ secrets.HOST_IP }}
            username: ${{ secrets.HOST_USERNAME }}
            password: ${{ secrets.HOST_PASSWORD }}
            script: |

              if [ ! -d ~/website-api ]; then
                mkdir ~/website-api
              fi

              cd /website-api/

              if [[ -f .env ]]; then
                sed -i 's/^MYSQL_SERVER=.*/MYSQL_SERVER=website-database/' .env
                sed -i 's/^MYSQL_ROOT_USER=.*/MYSQL_ROOT_USER=root/' .env
                sed -i 's/^MYSQL_ROOT_PASSWORD=.*/MYSQL_ROOT_PASSWORD=root/' .env
                sed -i 's/^MYSQL_USER=.*/MYSQL_USER=admin/' .env
                sed -i 's/^MYSQL_PASSWORD=.*/MYSQL_PASSWORD=admin/' .env
                sed -i 's/^MYSQL_DATABASE=.*/MYSQL_DATABASE=website-docker/' .env
              else
                echo "MYSQL_SERVER=website-database" > .env
                echo "MYSQL_ROOT_USER=root" >> .env
                echo "MYSQL_ROOT_PASSWORD=root" >> .env
                echo "MYSQL_USER=admin" >> .env
                echo "MYSQL_PASSWORD=admin" >> .env
                echo "MYSQL_DATABASE=website-docker" >> .env
              fi

              # docker compose up -d
                      
        - name: Send telegram message on push
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.TELEGRAM_TO }}
            token: ${{ secrets.TELEGRAM_TOKEN }}
            message: |
              ${{ github.actor }} created commit:
              Commit message: ${{ github.event.commits[0].message }}
              
              Repository: ${{ github.repository }}
              
              Commit: https://github.com/${{ github.repository }}/commit/${{github.sha}}

              